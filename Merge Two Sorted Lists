//You are given the heads of two sorted linked lists list1 and list2.

// Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

// Return the head of the merged linked list.

// Example 1:

// Input: list1 = [1,2,4], list2 = [1,3,4]
// Output: [1,1,2,3,4,4]

Approach is just like we don in array we have to make a new  linked list..
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode *t= new ListNode(0);
        ListNode *ans=t;
        while(l1!=NULL && l2!=NULL){
            if(l1->val>l2->val){
                t->next=l2;
                t=t->next;
                l2=l2->next;
            }
            else{
                 t->next=l1;
                 t=t->next;
                 l1=l1->next;
            }
        }
        if(l1){
            t->next=l1;
                 t=t->next;
                 l1=l1->next;
        }
        if(l2){
               t->next=l2;
                t=t->next;
                l2=l2->next;
        }
        return ans->next;
    }
};
